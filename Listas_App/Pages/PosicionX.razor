@page "/PosicionX"
@using Listas_App.Services
@using Listas_App.Models

<PageTitle>Insertar en Posicion X</PageTitle>

<h1>Lista Enlazada Simple</h1>

<label>Ingrese Nodo</label>
<input type="text" name="Valor" @bind-value="Valor" />
<label>Ingrese Posicion</label>
<input type="text" name="ValorAux" @bind-value="ValorAux" />
<br />
<button @onclick="AgregarInicio">Agregar nodo al inicio</button>
<button @onclick="AgregarFinal">Agregar nodo al final</button>
<br />
<button @onclick="InsertarEnPosicion">Agregar nodo en posicion</button>
<button @onclick="InsertarAntesPosicion">Agregar nodo antes de posicion</button>
<button @onclick="InsertarDespuesPosicion">Agregar nodo despues de posicion</button>
<br />
<button @onclick="LimpiarLista">Limpiar Lista</button>

@* <ul>
    @if (Lista.PrimerNodo != null)
    {
        ListaRecursiva(Lista.PrimerNodo);
    }    
</ul> *@

<ul>
    @{
        Nodo nodoTemporal = Lista.PrimerNodo;
        while (nodoTemporal != null)
        {
            <li>@nodoTemporal.Informacion</li>
            nodoTemporal = nodoTemporal.Referencia;
        }
    }
</ul>


@code {
    public string Valor { get; set; }
    public string ValorAux { get; set; }
    public Lista3_PosicionX Lista { get; set; }

    protected override void OnInitialized()
    {
        Lista = new Lista3_PosicionX();
        base.OnInitialized();
    }

    public void LimpiarLista()
    {
        Lista.LimpiarLista();
    }

    // private RenderFragment ListaRecursiva(Nodo nodo) => __builder =>
    // {
    //     if (nodo != null)
    //     {
    //         __builder.OpenElement(0, "li");
    //         __builder.AddContent(1, nodo.Informacion);
    //         __builder.CloseElement();
    //         ListaRecursiva(nodo.Referencia)(__builder);
    //     }
    // };

    public void AgregarFinal()
    {
        Lista.AgregarAlFinal(CrearNodo());
        Valor = string.Empty;
        ValorAux = string.Empty;
    }

    public void AgregarInicio()
    {
        Lista.AgregarAlInicio(CrearNodo());
        Valor = string.Empty;
        ValorAux = string.Empty;
    }

    public void InsertarEnPosicion()
    {
        Lista.InsertarEnPosicicion(CrearNodoAux(), CrearNodo());
        Valor = string.Empty;
        ValorAux = string.Empty;
    }

    public void InsertarAntesPosicion()
    {
        Lista.InsertarAntesDePosicicion(CrearNodoAux(), CrearNodo());
        Valor = string.Empty;
        ValorAux = string.Empty;
    }
    
    public void InsertarDespuesPosicion()
    {
        Lista.InsertarDespuesDePosicicion(CrearNodoAux(), CrearNodo());
        Valor = string.Empty;
        ValorAux = string.Empty;
    }

    Nodo CrearNodo()
    {
        Nodo nuevoNodo = new Nodo(Valor);
        return nuevoNodo;

    }

    Nodo CrearNodoAux()
    {
        Nodo auxNodo = new Nodo(ValorAux);
        return auxNodo;
    }
}
